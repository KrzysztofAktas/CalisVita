@using CalisVita.Components.Shared
@using CalisVita.Context
@using CalisVita.Model
@inject DatabaseContext DbContext
@inject NavigationManager NavigationManager
@inject WorkoutProvider WorkoutProvider
@inject UserProvider UserProvider

@page "/"



<PageTitle>Home</PageTitle>




    @code

{
    private WorkoutStatsViewModel workoutStats;
    private string userId;

    protected override async Task OnInitializedAsync()
    {
        // Get the current user
        var user = await UserProvider.GetUserByIdAsync(userId);
        if (user == null)
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        userId = user.Id; 

        
        workoutStats = new WorkoutStatsViewModel
            {
                TotalWorkouts = await WorkoutProvider.GetTotalWorkoutsCompletedAsync(userId),
                WorkoutStreak = await WorkoutProvider.GetWorkoutStreakAsync(userId)
            };
    }


 // Get the current day of the week (0 = Sunday, 6 = Saturday)
    string[] daysOfWeek = new[] {"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };
    int currentDayIndex = (int)DateTime.Now.DayOfWeek;


}<div class="calendar">
    @for (int i = 0; i < daysOfWeek.Length; i++)
    {
        <div class="day @(i == currentDayIndex ? "highlight" : "")">
            @daysOfWeek[i]
        </div>
    }
</div>


@if (workoutStats == null)
{
    <p>Loading...</p>
}
else
{
    <div class="stats-container">
        <div class="stat-card">
            <h3> Workout Streak</h3>
            <p>@workoutStats.WorkoutStreak days</p>
        </div>
        <div class="stat-card">
            <h3> Total Workouts</h3>
            <p>@workoutStats.TotalWorkouts completed</p>
        </div>
    </div>
}




<style>
    .calendar-container {
        display: flex;
        align-items: flex-start;
        gap: 20px;
    }

    .calendar {
        position: absolute;
        top: 5;
        left: 5;
        display: flex;
        padding: 10px;
        background-color: white; /* Optional: adds a background color */
        border: 1px solid #ccc; /* Optional: adds a border for visual distinction */
        width: fit-content; /* Adjust width based on content */
    }


    .day {
        padding: 10px;
        width: 60px;
        text-align: center;
        font-weight: bold;
        margin-right: 5px;
    }

    .highlight {
        background-color: lightblue;
        border-radius: 5px;
    }


    .stats-container {
        display: flex;
        gap: 20px;
        margin-top: 20px;
    }

    .stat-card {
        background: #f9f9f9;
        border: 1px solid #ddd;
        padding: 15px;
        border-radius: 8px;
        text-align: center;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    }

        .stat-card h3 {
            margin: 0;
            font-size: 1.2rem;
        }

        .stat-card p {
            font-size: 1.5rem;
            font-weight: bold;
        }


</style>